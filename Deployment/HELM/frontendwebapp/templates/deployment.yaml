apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontendwebapp
  namespace: {{ .Values.global.namespace }}
  labels:
{{ include "frontend.labels" . | indent 4 }}
spec:
  selector:
    matchLabels:
      app: {{ .Values.global.app }}
      tier: {{ .Values.global.tier }}
      track: {{ .Values.global.track }}
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 30%
  template:
    metadata:
      labels:
        app: {{ .Values.global.app }}
        tier: {{ .Values.global.tier }}
        track: {{ .Values.global.track }}
    spec:
      containers:
      - name: frontendwebapp
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
         - name: http
           containerPort: 80
           protocol: TCP
        env:
          - name: START_WAIT_SECS
            value: '15'
          - name: CRASH_FACTOR
            value: '30'
          - name: SOME_OTHER_VAR
            value: yassf
        livenessProbe:
          httpGet:
            path: /Home/HealthCheck/
            port: 80
            httpHeaders:
              - name: Host
                value: KubernetesLivenessProbe
          initialDelaySeconds: 20
        readinessProbe:
          httpGet:
            path: /Home/HealthCheck/
            port: 80
            httpHeaders:
              - name: Host
                value: KubernetesReadinessProbe
          initialDelaySeconds: 20
        resources:
          {{- toYaml .Values.resources | nindent 12 }}
        lifecycle:
          preStop:
            exec:
              command: ["/usr/sbin/nginx","-s","quit"]
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}

